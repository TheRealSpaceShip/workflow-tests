name: 'Test'

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'Environment selector'
        required: true
      stringInput:
        type: string
        description: 'This is string input'
        required: false
        default: 'stringInput'
      numberInput:
        type: number
        description: 'This is number input'
        required: false
        default: 666
      booleanInput:
        type: boolean
        description: 'This is boolean input'
        required: false
        default: false
      choiseInput:
        type: choice
        description: 'This is choise input'
        required: false
        options:
          - choise1
          - choise2
          - choise3
        default: 'choise2'

jobs:
  export-environment-vars:
    name: Use environment variable
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment }}
    steps:
      - name: Before ${{ vars.MY_ENV_VAR }}
        run: |
          echo "Before = $MY_ENV_VAR"
          echo "Before = ${{ env.MY_ENV_VAR }}"
      - name: Test ${{ vars.MY_ENV_VAR }}
        run: |
          echo '${{ toJson(vars) }}' | jq -crM 'to_entries | map("\(.key)=\"\(.value|tostring)\"") | .[]' >> $GITHUB_ENV
          echo "right after = $MY_ENV_VAR"
          echo "right after = ${{ env.MY_ENV_VAR }}"
      - name: After ${{ vars.MY_ENV_VAR }}
        run: |
          echo "After = $MY_ENV_VAR_1"
          echo "After = ${{ env.MY_ENV_VAR }}"

  test-condition:
    runs-on: 'ubuntu-latest'
    if: inputs.booleanInput
    steps:
      -
        id: 'test'
        name: 'Test inputs with conditions'
        env:
          STRING_INPUT: ${{ inputs.stringInput }}
          NUMBER_INPUT: ${{ inputs.numberInput }}
          BOOLEAN_INPUT: ${{ inputs.booleanInput }}
          CHOISE_INPUT: ${{ inputs.choiseInput }}
        run: |
          echo "STRING_INPUT=$STRING_INPUT"
          echo "NUMBER_INPUT=$NUMBER_INPUT"
          echo "BOOLEAN_INPUT=$BOOLEAN_INPUT"
          echo "CHOISE_INPUT=$CHOISE_INPUT"

  test:
    runs-on: 'ubuntu-latest'
    steps:
      -
        id: 'test'
        name: 'Test inputs'
        env:
          STRING_INPUT: ${{ inputs.stringInput }}
          NUMBER_INPUT: ${{ inputs.numberInput }}
          BOOLEAN_INPUT: ${{ inputs.booleanInput }}
          CHOISE_INPUT: ${{ inputs.choiseInput }}
        run: |
          echo "STRING_INPUT=$STRING_INPUT"
          echo "NUMBER_INPUT=$NUMBER_INPUT"
          echo "BOOLEAN_INPUT=$BOOLEAN_INPUT"
          echo "CHOISE_INPUT=$CHOISE_INPUT"
