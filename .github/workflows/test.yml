name: 'Test'

on:
  workflow_dispatch:
    inputs:
      hubRef:
        description: 'Hub CLI git ref'
        required: true
        default: 'v1.0.6'
      hubCommit:
        description: 'Hub CLI commit hash. If empty latest release tag is used.'
        required: false
        default: ''
      hubExtRef:
        description: 'Hub Extensions git ref'
        required: true
        default: 'gcp-extensions'
      hubExtCommit:
        description: 'Hub Extensions commit hash. If empty latest is used.'
        required: false
        default: ''
      hubStateRef:
        description: 'Hub State git ref'
        required: true
        default: 'master'
      hubStateCommit:
        description: 'Hub State commit hash. If empty latest is used.'
        required: false
        default: ''

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - id: 'versions'
        name: 'Calculate versions'
        run: |
          HUB_CLI_VERSION=$(git ls-remote -q https://github.com/agilestacks/hub.git "${{ github.event.inputs.hubRef }}" 2>/dev/null | cut -c-7)
          HUB_EXTENSIONS_VERSION=$(git ls-remote -q https://github.com/agilestacks/hub-extensions.git "${{ github.event.inputs.hubExtRef }}" 2>/dev/null | cut -c-7)
          HUB_STATE_VERSION=$(git ls-remote -q https://github.com/agilestacks/hub-state.git "${{ github.event.inputs.hubStateRef }}" 2>/dev/null | cut -c-7)
          FULL_NAME=$(curl -s -H "Accept: application/vnd.github.v3+json" "${{ github.event.sender.url }}" | jq -crM '.name | select(.)')

          echo "::set-output name=hubVersion::$HUB_CLI_VERSION"
          echo "::set-output name=hubExtVersion::$HUB_EXTENSIONS_VERSION"
          echo "::set-output name=hubStateVersion::$HUB_STATE_VERSION"
          echo "::set-output name=fullname::$FULL_NAME"

      - name: 'Outputs'
        run: |
          echo "FULLNAME: ${{ steps.versions.outputs.fullname || github.actor }}"
          echo "HUB CLI: ${{ github.event.inputs.hubCommit || steps.versions.outputs.hubVersion }}"
          echo "HUB Extensions: ${{ github.event.inputs.hubExtCommit || steps.versions.outputs.hubExtVersion }}"
          echo "HUB State: ${{ github.event.inputs.hubStateCommit || steps.versions.outputs.hubStateVersion }}"
